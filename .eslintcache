[{"/home/volodya/Progects/calendar/src/index.tsx":"1","/home/volodya/Progects/calendar/src/App.tsx":"2","/home/volodya/Progects/calendar/src/calendar/index.tsx":"3","/home/volodya/Progects/calendar/src/reportWebVitals.ts":"4"},{"size":478,"mtime":1610184297500,"results":"5","hashOfConfig":"6"},{"size":168,"mtime":1610184545822,"results":"7","hashOfConfig":"6"},{"size":6252,"mtime":1610209657867,"results":"8","hashOfConfig":"6"},{"size":425,"mtime":1610183937381,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"11bqqcj",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/volodya/Progects/calendar/src/index.tsx",[],["20","21"],"/home/volodya/Progects/calendar/src/App.tsx",[],"/home/volodya/Progects/calendar/src/calendar/index.tsx",["22","23","24","25","26"],"import { ReactNode, useCallback, useMemo, useState } from \"react\";\nimport \"./styles.css\";\n\nconst Calendar = () => {\n  type monthInfoType = {\n    order: number;\n    name: string;\n    genetive: string;\n    daysPerMounth: (year?: number) => number;\n  };\n\n  type monthAndYearType = {\n    month: number;\n    year: number;\n  };\n  const dateNow = new Date();\n  const [date, setDate] = useState<monthAndYearType>({\n    month: dateNow.getMonth(),\n    year: dateNow.getFullYear(),\n  });\n\n  const monthYear = new Date(date.year, date.month);\n\n  const getMonthInfo = useMemo(\n    () => (order: number): monthInfoType => {\n      switch (order) {\n        case 0:\n          return {\n            order: 0,\n            name: \"Январь\",\n            genetive: \"Января\",\n            daysPerMounth: () => 31,\n          };\n        case 1:\n          return {\n            order: 1,\n            name: \"Февраль\",\n            genetive: \"Февраля\",\n            daysPerMounth: (year) => (year! % 4 === 0 ? 29 : 28),\n          };\n        case 2:\n          return {\n            order: 2,\n            name: \"Март\",\n            genetive: \"Марта\",\n            daysPerMounth: () => 31,\n          };\n        case 3:\n          return {\n            order: 3,\n            name: \"Апрель\",\n            genetive: \"Апреля\",\n            daysPerMounth: () => 30,\n          };\n        case 4:\n          return {\n            order: 4,\n            name: \"Май\",\n            genetive: \"Мая\",\n            daysPerMounth: () => 31,\n          };\n        case 5:\n          return {\n            order: 5,\n            name: \"Июнь\",\n            genetive: \"Июня\",\n            daysPerMounth: () => 30,\n          };\n        case 6:\n          return {\n            order: 6,\n            name: \"Июль\",\n            genetive: \"Июля\",\n            daysPerMounth: () => 31,\n          };\n        case 7:\n          return {\n            order: 7,\n            name: \"Август\",\n            genetive: \"Августа\",\n            daysPerMounth: () => 31,\n          };\n        case 8:\n          return {\n            order: 8,\n            name: \"Сентябрь\",\n            genetive: \"Сентября\",\n            daysPerMounth: () => 30,\n          };\n        case 9:\n          return {\n            order: 9,\n            name: \"Октябрь\",\n            genetive: \"Октября\",\n            daysPerMounth: () => 31,\n          };\n        case 10:\n          return {\n            order: 10,\n            name: \"Ноябрь\",\n            genetive: \"Ноября\",\n            daysPerMounth: () => 30,\n          };\n        case 11:\n          return {\n            order: 11,\n            name: \"Декабрь\",\n            genetive: \"Декабря\",\n            daysPerMounth: () => 31,\n          };\n        default:\n          return {\n            order: 0,\n            name: \"Январь\",\n            genetive: \"Января\",\n            daysPerMounth: () => 31,\n          };\n      }\n    },\n    [date]\n  );\n\n  const monthMinus = useCallback(() => {\n    setDate({\n      month:\n        getMonthInfo(date.month).order - 1 < 0\n          ? 11\n          : getMonthInfo(date.month).order - 1,\n      year: getMonthInfo(date.month).order - 1 < 0 ? date.year - 1 : date.year,\n    });\n  }, [date]);\n\n  const monthPlus = useCallback(() => {\n    setDate({\n      month:\n        getMonthInfo(date.month).order + 1 > 11\n          ? 0\n          : getMonthInfo(date.month).order + 1,\n      year: getMonthInfo(date.month).order + 1 > 11 ? date.year + 1 : date.year,\n    });\n  }, [date]);\n\n  const getDay = useCallback(\n    (date: Date): number => {\n      let day = date.getDay();\n      if (day == 0) day = 7;\n      return day - 1;\n    },\n    [date]\n  );\n  const calendarGrid = (days: number): ReactNode => {\n    const res: Array<number[]> = [];\n    let week: number[] = [];\n    let dayOfTheWeek = 0;\n\n    let currentDay = 1;\n    const dayFromCurrentMonthStarted = getDay(monthYear);\n    const prevMonth =\n      getMonthInfo(date.month).order - 1 < 0\n        ? 11\n        : getMonthInfo(date.month).order - 1;\n    let monthStarted = getDay(monthYear) > 0 ? false : true;\n\n    const prevMonthDayCount = getMonthInfo(prevMonth).daysPerMounth();\n    let dayOfPrevMounth =\n      dayFromCurrentMonthStarted > 0\n        ? prevMonthDayCount - dayFromCurrentMonthStarted\n        : 0;\n\n    while (days > -1) {\n      if (dayOfTheWeek < 7) {\n        if (days === 0) {\n          res.push([...week]);\n        }\n        if (monthStarted) {\n          dayOfTheWeek++;\n          days--;\n          week.push(currentDay);\n          currentDay++;\n        } else {\n          if (dayOfPrevMounth < prevMonthDayCount) {\n            dayOfTheWeek++;\n            week.push(dayOfPrevMounth);\n            dayOfPrevMounth++;\n          } else {\n            monthStarted = true;\n          }\n        }\n      } else {\n        res.push([...week]);\n        week = [];\n        dayOfTheWeek = 0;\n      }\n    }\n\n    return (\n      <>\n        {res.map((week) => (\n          <tr>\n            {week.map((el) => {\n              if (\n                dateNow.getMonth() === date.month &&\n                dateNow.getFullYear() === date.year &&\n                el === dateNow.getDate()\n              ) {\n                return (\n                  <td>\n                    <span className=\"today\">{el}</span>\n                  </td>\n                );\n              } else {\n                return <td>{el}</td>;\n              }\n            })}\n          </tr>\n        ))}\n      </>\n    );\n  };\n\n  return (\n    <div className=\"calendarWrapper\">\n      <div className=\"dateSwitcher\">\n        <div onClick={monthMinus}>\n          <button>-</button>\n        </div>\n        <div>\n          <pre>\n            {getMonthInfo(date.month).name} {date.year}\n          </pre>\n        </div>\n        <div>\n          <button onClick={monthPlus}>+</button>\n        </div>\n      </div>\n      <table>\n        <tr>\n          <th>пн</th>\n          <th>вт</th>\n          <th>ср</th>\n          <th>чт</th>\n          <th>пт</th>\n          <th>сб</th>\n          <th>вс</th>\n        </tr>\n        {calendarGrid(getMonthInfo(date.month).daysPerMounth(date.year))}\n      </table>\n    </div>\n  );\n};\n\nexport default Calendar;\n","/home/volodya/Progects/calendar/src/reportWebVitals.ts",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":120,"column":5,"nodeType":"33","endLine":120,"endColumn":11,"suggestions":"34"},{"ruleId":"31","severity":1,"message":"35","line":131,"column":6,"nodeType":"33","endLine":131,"endColumn":12,"suggestions":"36"},{"ruleId":"31","severity":1,"message":"35","line":141,"column":6,"nodeType":"33","endLine":141,"endColumn":12,"suggestions":"37"},{"ruleId":"38","severity":1,"message":"39","line":146,"column":15,"nodeType":"40","messageId":"41","endLine":146,"endColumn":17},{"ruleId":"31","severity":1,"message":"42","line":149,"column":5,"nodeType":"33","endLine":149,"endColumn":11,"suggestions":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"react-hooks/exhaustive-deps","React Hook useMemo has an unnecessary dependency: 'date'. Either exclude it or remove the dependency array.","ArrayExpression",["46"],"React Hook useCallback has a missing dependency: 'getMonthInfo'. Either include it or remove the dependency array.",["47"],["48"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useCallback has an unnecessary dependency: 'date'. Either exclude it or remove the dependency array.",["49"],"no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},{"desc":"52","fix":"53"},{"desc":"52","fix":"54"},{"desc":"50","fix":"55"},"Update the dependencies array to be: []",{"range":"56","text":"57"},"Update the dependencies array to be: [date.month, date.year, getMonthInfo]",{"range":"58","text":"59"},{"range":"60","text":"59"},{"range":"61","text":"57"},[2851,2857],"[]",[3135,3141],"[date.month, date.year, getMonthInfo]",[3416,3422],[3579,3585]]